//////////////////////////////////// ПРОЧЕЕ ///////////////////////////////

//список таблиц
\d

//Подробно о таблице
\d+ product_list
\d+ product_type
\d+ currency
\d+ Contact_information
\d+ contracts

//сменить кодировку
psql \! chcp 1251

//Узнать путь к data directory (где хранятся все БД)
SHOW data_directory;

//Команда для дампа базы ЧЕРЕЗ КОМАНДНУЮ СТРОКУ!!!
pg_dump -U postgres -d postgres > C:\Users\user\Desktop\backupmy_database/my_database_dump.sql

//Замена пароля БД
ALTER USER postgres WITH PASSWORD '1234';

//////////////////////////////////// СОЗДАНИЕ ТАБЛИЦ ///////////////////////////////

//создать таблицу product_list
CREATE TABLE product_list 
(id SERIAL PRIMARY KEY, 
name VARCHAR(150),
is_group BOOLEAN,
parrent_id INT,
product_type_id INT);

//создать таблицу product_type
CREATE TABLE product_type (id SERIAL PRIMARY KEY,
name VARCHAR(50));

//создать таблицу counterparties_list
CREATE TABLE counterparties_list 
(id SERIAL PRIMARY KEY, 
name VARCHAR(150));

//создать таблицу contact_information
CREATE TABLE contact_information 
(id SERIAL PRIMARY KEY, 
name VARCHAR(150),
ID_type_ки INT,
ID_counterparty INT,
meaning VARCHAR(150));

//создать таблицу contact_information_type
CREATE TABLE contact_information_type 
(id SERIAL PRIMARY KEY, 
name VARCHAR(150));

//создать таблицу contracts
CREATE TABLE contracts 
(id SERIAL PRIMARY KEY, 
number_contracts INT,
date DATE,
conditions TEXT,
ID_type_counterparty INT,
ID_currency INT);

//создать таблицу currency (Валюта)
CREATE TABLE currency 
(id SERIAL PRIMARY KEY, 
name VARCHAR(50));

//создать таблицу counterparty_type (ТипКонтрагента)
CREATE TABLE counterparty_type 
(id SERIAL PRIMARY KEY, 
name VARCHAR(150));

//////////////////////////////////// ЗАПОЛНЕНИЕ ТАБЛИЦ ///////////////////////////////

//вставить одно значение
INSERT INTO product_list (name, product_type, is_group, parrent_id)
VALUES ('ящик', 'тара', false, null);

INSERT INTO product_type (name)
VALUES ('тара');

//выбрать все из таблицы
SELECT * FROM product_list;
SELECT * FROM product_type;
SELECT * FROM currency;
SELECT * FROM counterparty_type;
SELECT * FROM contact_information_type;
SELECT * FROM counterparties_list;
SELECT * FROM Contact_information;
SELECT * FROM contracts;

//пакетная вставка в таблицу product_list
INSERT INTO product_list (name, is_group, parrent_id, product_type_id)
VALUES 
('кресло', false, null, 1),
('карандаш эрих краузе', false, null, 1),
('маркер', false, null, 1),
('бумага', false, null, 1),
('линейка', false, null, 1),
('калькулятор', false, null, 1),
('доставка', false, null, 2),
('ящик', false , null, 3),
('канцтовары', true, null, 1),
('упаковка', true, null, 3);

//пакетная вставка в таблицу product_type
INSERT INTO product_type (name)
VALUES 
('товар'),
('услуга'),
('упаковка');

//пакетная вставка в таблицу currency (Валюта)
INSERT INTO currency (name)
VALUES 
('Рубль РФ'),
('Доллар США'),
('Китайский юань');

//пакетная вставка в таблицу counterparty_type (ТипКонтрагента)
INSERT INTO counterparty_type (name)
VALUES ('Поставщик'),
('Покупатель');

//пакетная вставка в таблицу contact_information_type (ТипКонтактнаяИнформация)
INSERT INTO contact_information_type (name)
VALUES 
('Юр адрес'),
('Номер телефона'),
('Email');

//пакетная вставка в таблицу counterparties_list (Контрагенты)
INSERT INTO counterparties_list (name)
VALUES 
('ПАО "ЛУКОЙЛ"'),
('ПАО "Росснефть"'),
('ПАО "Газпром"');

/пакетная вставка в таблицу Contact_information (КонтактнаяИнформация)
INSERT INTO Contact_information (ID_type_ки, ID_counterparty, meaning)
VALUES 
(1, 1, '101000, Российская Федерация, г. Москва, Сретенский бульвар, дом 11'),
(2, 1, '+7495627‑4444'),
(3, 1, 'lukoil@lukoil.ru'),
(1, 2, 'Россия, 117997, г. Москва, Софийская набережная, д.26/1'),
(2, 2, '+7(499)517‑72‑35'),
(3, 2, 'postman@rosneft.ru'),
(1, 3, '197229, Россия, г. Санкт‑Петербург, Лахтинский проспект, д.2, корп.3, стр.1'),
(2, 3, '+7(495)719‑30‑01'),
(2, 3, '+7(495)719‑83‑33 (факс)'),
(3, 3, 'gazprom@gazprom.ru');

/пакетная вставка в таблицу contracts (Договоры)
INSERT INTO contracts (number_contracts, date, conditions, ID_type_counterparty, ID_currency, ID_counterparty)
VALUES 
(98865, '2025-06-13', 'многа буков о том кто кому и что должен', 1, 1, 1),
(78278, '2024-08-03', 'многа буков о том кто кому и что должен', 2, 1, 1),
(828, '2024-12-15', 'многа буков о том кто кому и что должен', 1, 1, 2),
(8288, '2023-11-25', 'многа буков о том кто кому и что должен', 1, 1, 3);

//////////////////////////////////// ИЗМЕНЕНИЕ ТАБЛИЦ ///////////////////////////////

//поменять таблицу

///добавить колонку
ALTER TABLE product_list ADD COLUMN "unit" VARCHAR(50);
ALTER TABLE product_list ADD COLUMN "product_type_id" INT;
ALTER TABLE contracts ADD COLUMN ID_counterparty INT;

///удалить колонку
ALTER TABLE product_list DROP COLUMN unit
ALTER TABLE contracts DROP COLUMN "ID_counterparty"

//выбрать колонку из таблицы
SELECT product_type FROM product_list;

//выбрать и сгруппировать колонку из таблицы
SELECT product_type FROM product_list
GROUP BY product_type;

//вставить отобранные значения в новую таблицу
INSERT INTO product_type (name)
SELECT product_type FROM product_list GROUP BY product_type;

//удалить таблицу
DROP TABLE

//удалить колонку таблицы
ALTER TABLE product_list DROP COLUMN product_type;
ALTER TABLE Contact_information DROP COLUMN name;

//ограничения
ALTER TABLE product_list ALTER COLUMN product_type SET NOT NULL;
ALTER TABLE product_list ALTER COLUMN is_group SET NOT NULL;

//замена одного значения
UPDATE product_list SET name = 'карандаш паркер' WHERE id = 3;

UPDATE product_list SET product_type_id = NULL WHERE id = 9;

//заполнение колонки по условию
UPDATE product_list SET product_type_id = 1 WHERE product_type = 'услуга';
UPDATE product_list SET product_type_id = 2 WHERE product_type = 'товар';
UPDATE product_list SET product_type_id = 3 WHERE product_type = 'тара';

UPDATE product_list SET parrent_id = 9 WHERE product_type_id = 1;
UPDATE product_list SET parrent_id = 10 WHERE product_type_id = 3;

//удаление данных из таблицы по id
DELETE FROM product_list WHERE id = 5;

//////////////////////////////////// УСТАНОВКА ОГРАНИЧЕНИЙ ///////////////////////////////

ALTER TABLE product_list ALTER COLUMN is_group SET DEFAULT FALSE;
ALTER TABLE product_list ADD CONSTRAINT unique_name UNIQUE(name);

//ограничение по совокупности колонок
ALTER TABLE product_list ADD CONSTRAINT unique_name UNIQUE(name, product_type_id);

// ограичение NOT NULL

///ограничения для таблицы contracts (Договоры)
ALTER TABLE contracts
ALTER COLUMN number_contracts SET NOT NULL,
ALTER COLUMN date SET NOT NULL,
ALTER COLUMN id_counterparty SET NOT NULL,
ALTER COLUMN id_currency SET NOT NULL,
ALTER COLUMN id_type_counterparty SET NOT NULL;

///ограничения для таблицы product_type (ТипыНоменклатуры) 
ALTER TABLE product_type
ALTER COLUMN name SET NOT NULL;

///ограничения для таблицы counterparties_list (Контрагенты) 
ALTER TABLE counterparties_list
ALTER COLUMN name SET NOT NULL;

///ограничения для таблицы currency (Валюта) 
ALTER TABLE currency
ALTER COLUMN name SET NOT NULL;

///ограничения для таблицы counterparty_type (ТипКонтрагента)
ALTER TABLE counterparty_type
ALTER COLUMN name SET NOT NULL;

///ограничения для таблицы contact_information_type (ТипКонтактнаяИнформация)
ALTER TABLE contact_information_type
ALTER COLUMN name SET NOT NULL;

///ограничения для таблицы Contact_information (КонтактнаяИнформация)
ALTER TABLE Contact_information
ALTER COLUMN ID_type_ки SET NOT NULL,
ALTER COLUMN ID_counterparty SET NOT NULL,
ALTER COLUMN meaning SET NOT NULL;

///ограничения для таблицы product_list (Номенклатура)
ALTER TABLE product_list
ALTER COLUMN name SET NOT NULL;

// ограничения UNIQUE

/// ограничения для таблицы contracts (Договоры) - номера контрактов могут повторяться, но не должны дублироваться в паре с контрагентом
ALTER TABLE contracts
ADD CONSTRAINT unique_number_per_counterparty UNIQUE (number_contracts, id_counterparty);

/// ограничения для таблицы product_type (ТипыНоменклатуры)
ALTER TABLE product_type
ADD CONSTRAINT unique_product_type_name UNIQUE (name);

// ограничения для таблицы currency (Валюта)
ALTER TABLE currency
ADD CONSTRAINT unique_currency_name UNIQUE (name);

// ограничения для таблицы counterparty_type (ТипКонтрагента)
ALTER TABLE currency
ADD CONSTRAINT unique_counterparty_type_name UNIQUE (name);

// ограничения для таблицы contact_information_type (ТипКонтактнаяИнформация)
ALTER TABLE currency
ADD CONSTRAINT unique_contact_information_type_name UNIQUE (name);

// ограничения для таблицы counterparties_list (Контрагенты)
ALTER TABLE currency
ADD CONSTRAINT unique_counterparties_list_name UNIQUE (name);


//ограичение foreign key

///для таблицы contracts (Договоры)
ALTER TABLE contracts
ADD CONSTRAINT fk_counterparty
FOREIGN KEY (id_counterparty)
REFERENCES counterparties_list(id);

ALTER TABLE contracts
ADD CONSTRAINT fk_type_counterparty
FOREIGN KEY (ID_type_counterparty)
REFERENCES counterparty_type(id);

ALTER TABLE contracts
ADD CONSTRAINT fk_currency
FOREIGN KEY (ID_currency)
REFERENCES currency(id);

///для таблицы Contact_information (КонтактнаяИнформация)
ALTER TABLE Contact_information
ADD CONSTRAINT fk_ID_type_ки
FOREIGN KEY (ID_type_ки)
REFERENCES contact_information_type(id);

ALTER TABLE Contact_information
ADD CONSTRAINT fk_ID_counterparty
FOREIGN KEY (ID_counterparty)
REFERENCES counterparties_list(id);

///для таблицы product_list (Номенклатура)
ALTER TABLE product_list
ADD CONSTRAINT fk_product_type
FOREIGN KEY (product_type_id)
REFERENCES product_type(id);


///////////////////////////////////////удаление ограничений
ALTER TABLE contracts DROP CONSTRAINT unique_number_contracts;






 